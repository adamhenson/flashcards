{
  "name": "Fancy Words System Design and Architecture",
  "items": [
    {"main": "Scalability (skay-luh-BIL-ih-tee) – noun", "subs": ["The ability of a system to handle increased load or demand.", "a) We designed the service for horizontal scalability from day one.", "b) Her weekend plans didn't scale as well as her Kubernetes cluster."]},
    {"main": "Fault Tolerance (fawlt TOL-er-uhns) – noun", "subs": ["The ability of a system to continue operating despite failures.", "a) Redundancy gives us fault tolerance even if a node crashes.", "b) He lacks fault tolerance before his morning coffee."]},
    {"main": "Latency (LAY-ten-see) – noun", "subs": ["The delay between a request and a response.", "a) Reducing network latency improved the user experience dramatically.", "b) Her reaction latency before coffee is roughly 500 milliseconds."]},
    {"main": "Idempotency (EYE-dum-POH-ten-see) – noun", "subs": ["The property that multiple identical requests have the same effect as one.", "a) Payment APIs must maintain idempotency to prevent double charges.", "b) He treats apologies with idempotency—say it once, move on."]},
    {"main": "Observability (ob-ZUR-vuh-bil-ih-tee) – noun", "subs": ["The ability to understand a system's internal state from its outputs.", "a) We improved observability with better tracing and structured logs.", "b) Her calendar has terrifying observability—everyone can see her chaos."]},
    {"main": "Resilience (ri-ZIL-yuns) – noun", "subs": ["The ability to recover from failure or adapt to change.", "a) We built resilience into the architecture using retries and circuit breakers.", "b) He's resilient even after five deploy rollbacks."]},
    {"main": "Throughput (THROO-put) – noun", "subs": ["The amount of work a system can process over time.", "a) Batch processing increased our throughput tenfold.", "b) Her snack throughput during meetings is impressive."]},
    {"main": "Bottleneck (BOT-ul-nek) – noun", "subs": ["A limiting factor that slows down overall performance.", "a) The database quickly became the system's main bottleneck.", "b) My brain's bottleneck is context switching."]},
    {"main": "Redundancy (ri-DUN-dun-see) – noun", "subs": ["Duplication of components to ensure reliability.", "a) We added server redundancy to prevent downtime.", "b) He tells stories with a lot of redundancy, just for emphasis."]},
    {"main": "Load Balancing (lohd BAL-un-sing) – noun", "subs": ["Distributing traffic evenly across resources to avoid overload.", "a) We implemented load balancing to keep latency consistent.", "b) She's basically load balancing between work, gym, and social life."]},
    {"main": "Eventual Consistency (ih-VEN-choo-ul kun-SIS-ten-see) – noun", "subs": ["A model where data becomes consistent over time, not instantly.", "a) Our database is eventually consistent, but users never notice.", "b) My laundry system runs on eventual consistency too."]},
    {"main": "Sharding (SHAR-ding) – noun", "subs": ["Splitting data into smaller, more manageable parts (shards).", "a) We implemented sharding to handle billions of records efficiently.", "b) He shards his to-do list into five different apps."]},
    {"main": "Replication (rep-li-KAY-shun) – noun", "subs": ["Copying data or services to improve reliability and availability.", "a) Data replication ensures we don't lose anything on failure.", "b) Her Spotify playlists have too much replication across devices."]},
    {"main": "Decoupling (dee-KUP-ling) – noun", "subs": ["Separating components so they can evolve independently.", "a) We decoupled the front end from the API using events.", "b) Decoupling work and identity is healthy, even outside coding."]},
    {"main": "Backpressure (BAK-presh-ur) – noun", "subs": ["A mechanism to prevent producers from overwhelming consumers in a system.", "a) We added backpressure to stop the message queue from exploding.", "b) She applied emotional backpressure by muting all notifications."]},
    {"main": "Orchestration (or-kih-STRAY-shun) – noun", "subs": ["Automated coordination and management of multiple services or systems.", "a) Kubernetes handles orchestration of our microservices.", "b) He orchestrated dinner, drinks, and dessert like a DevOps pro."]},
    {"main": "Caching (KASH-ing) – noun", "subs": ["Storing data temporarily for faster access.", "a) We added caching to speed up repeated queries.", "b) She's caching comebacks for future arguments."]},
    {"main": "Choreography (kor-ee-OG-ruh-fee) – noun", "subs": ["Decentralized coordination among services without a central controller.", "a) Our microservices communicate through event choreography instead of orchestration.", "b) The family group chat has its own chaotic choreography."]},
    {"main": "Elasticity (ee-las-TIS-ih-tee) – noun", "subs": ["The ability of a system to automatically scale resources up or down.", "a) Cloud elasticity saves us money during off-peak hours.", "b) His social energy has zero elasticity after 9 p.m."]},
    {"main": "High Availability (hy uh-VAY-luh-bil-ih-tee) – noun", "subs": ["Ensuring continuous operation with minimal downtime.", "a) We designed the system for high availability using multi-region failover.", "b) She maintains high availability for brunch invites but low for emails."]}
  ]
}
