{
  "name": "Job Experiences",
  "items": [
    {
      "main": "Assured: GitLab CI Backend Integration Intermittent Test Failures",
      "subs": [
        "**Situation**: Incident was raised in which intermittent backend integration tests became more common, blocking an important release. I offered jump in to lend a hand while my manager was out, despite not being familiar with the tests.",
        "**Task**: Unblock the release.",
        "**Action**: Tracked down failing tests, identified the main contributors, and worked with their team to fix the issues. Although more test runs were passing, I was troubled by not knowing when failure rates would be normal - without a baseline... when to close the incident. Since it was on a Friday, I decided to spend the weekend building a tool to surface a dashboard of failure rates in GitLab CI. It downloaded and parsed JUnit XML artifacts, stored in a JSON file, committed via GitLab CI scheduled pipeline.",
        "**Result**: Over-communicating the status was key in looping key people of the release who greatly appreciated and even gave me a 'Cheers for peers'. The tool provided a view into past failure rates and surfaced a chart that painted the picture clearly.",
        "**Takeaway**: Using AI to build a quick tool was powerful. People loved the over-communication."
      ],
      "tags": ["accountability", "initiative"]
    },
    {
      "main": "Assured: Design System Icons",
      "subs": [
        "**Situation**: In building Sidekick, workflow steps were designed with new icons.",
        "**Task**: Convert icons to components that can be dynamically determined usage.",
        "**Action**: Worked with the team post-daily standups and async in Slack to define a new component library with icon components that can be easily generated. I had already identified the need for a standardized approach before Sidekick and had opened a shared document in which I already had some feedback. This was useful in pushing forward rapidly.",
        "**Result**: Was able to rollout over 100 icons with a single command and provided ease of use and streamlined process for the team and future developers.",
        "**Takeaway**: In a rapid-paced environment, being able to iterate quickly and communicate effectively with the team is key. This was a great example of how a small amount of upfront work can pay off big time."
      ],
      "tags": ["architecture", "technical competency", "collaboration"]
    },
    {
      "main": "Assured: Design System Component Library",
      "subs": [
        "**Situation**: Identified new design across the board for Sidekick.",
        "**Task**: In building Sidekick, in close works with the design team, I led the effort to create an internal component library package with Storybook and Chromatic.",
        "**Action**: Despite rapid development cycles, I was able to pre-emptively propose, draw agreement with the team, and evangelize the component library. The close working with design team was key in establishing a component driven Figma design mirroring the design system",
        "**Result**: The component library was a success and is used by the team to this day. It is a key part of the Sidekick developer experience.",
        "**Takeaway**: In a rapid-paced environment, being able to iterate quickly and communicate effectively with the team is key. This was a great example of how a small amount of upfront work can pay off big time."
      ],
      "tags": ["architecture", "technical competency", "collaboration"]
    },
    {
      "main": "Assured: Custom vs Trunk-Based Branching and Releasing",
      "subs": [
        "**Situation**: Head of Engineering proposed a new custom branching and release process.",
        "**Task**: Assist with introduction of new custom branching and release process",
        "**Action**: Prepared for app platform meeting in reviewing new branching strategy and release process. Inquired about comparison with trunk-based. Provided feedback and recommendations in the document. The angle from Head of Engineering was determined to move on it ASAP. Head of Engineering disagreed confidently and rejected the proposal. I still showed support for his decision and tried to make the most of the situation, by contributing to the process (changelog).",
        "**Result**: Although the result wasn't good, I learned to navigate a difficult situation and contribute to the process in a positive way.",
        "**Takeaway**: Sometimes you have to navigate difficult situations and contribute to the process in a positive way."
      ],
      "tags": ["conflict resolution", "collaboration"]
    },
    {
      "main": "Assured: Analytics Dashboard",
      "subs": [
        "**Situation**: Tasked to build an analytics dashboard for the product - and CTO specifically asked it to be built with Tremor.",
        "**Task**: I worked with a backend engineer to build the dashboard in a short amount of time.",
        "**Action**: I worked closely with the other engineer and together came up with a contract. The first thing I focused on was an identified gray area of lack of support in specifying colors for charts. I opened a PR with the open source library which was quickly merged with praise and released.",
        "**Result**: The dashboard was built rapidly, and with the work of contributing to the open source library, it pleased the stakeholders and provided great benefit to the client.",
        "**Takeaway**: Weighing the cost of contributing to open source vs building a custom solution was a good decision. It was a win-win for all involved."
      ],
      "tags": ["initiative"]
    },
    {
      "main": "Shutterstock: CMS Driven Marketing Pages",
      "subs": [
        "**Situation**: We were building a CMS driven system for marketing team to quickly and easily build pages.",
        "**Task**: I was a main contributor in architecting and building this system and one piece I took on was a mechanism that essentially mapped data to React components and rendered them.",
        "**Action**: I built the mechanism by matching content types to components and rendering them with the data. The mechanism worked by recursively assembling and rendering the React tree. I shared with the team what I was working on in daily standups, covered the content mapper with tests and wrote solid documentation.",
        "**Result**: The content mapper successfully powered thousands of pages and was a key part of the system. However, despite my efforts to elaborately document and test, I was the content mapper owner. Others were still confused by it.",
        "**Takeaway**: Even when you think you are taking the best approach independently, it's important to share your approach early, get buy-in and ideally try to encourage others to contribute."
      ],
      "tags": ["accountability", "collaboration"]
    },
    {
      "main": "Assured: E2E Tests",
      "subs": [
        "**Situation**: We were building a CMS driven system for marketing team to quickly and easily build pages.",
        "**Task**: I was a main contributor in architecting and building this system and one piece I took on was a mechanism that essentially mapped data to React components and rendered them.",
        "**Action**: I built the mechanism by matching content types to components and rendering them with the data. The mechanism worked by recursively assembling and rendering the React tree. I shared with the team what I was working on in daily standups, covered the content mapper with tests and wrote solid documentation.",
        "**Result**: The content mapper successfully powered thousands of pages and was a key part of the system. However, despite my efforts to elaborately document and test, I was the content mapper owner. Others were still confused by it.",
        "**Takeaway**: Even when you think you are taking the best approach independently, it's important to share your approach early, get buy-in and ideally try to encourage others to contribute."
      ],
      "tags": ["accountability", "collaboration"]
    }
  ]
}
